// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MovieCard should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MovieCard />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          alt="movie poster"
          className="movie-img"
        />,
        <div
          className="movie-info-text"
        >
          <div
            className="movie-icon-container"
          >
            <p
              className="movie-rating"
            />
            <img
              alt="full popcorn"
              className="favorite-icon"
              onClick={[Function]}
              src="../images/empty-popcorn.svg"
            />
          </div>
          <h3
            className="movie-title"
          />
          <p
            className="movie-release"
          />
          <p
            className="movie-description"
          />
        </div>,
      ],
      "className": "movie-card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "movie poster",
          "className": "movie-img",
          "src": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="movie-icon-container"
            >
              <p
                className="movie-rating"
              />
              <img
                alt="full popcorn"
                className="favorite-icon"
                onClick={[Function]}
                src="../images/empty-popcorn.svg"
              />
            </div>,
            <h3
              className="movie-title"
            />,
            <p
              className="movie-release"
            />,
            <p
              className="movie-description"
            />,
          ],
          "className": "movie-info-text",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="movie-rating"
                />,
                <img
                  alt="full popcorn"
                  className="favorite-icon"
                  onClick={[Function]}
                  src="../images/empty-popcorn.svg"
                />,
              ],
              "className": "movie-icon-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "movie-rating",
                },
                "ref": null,
                "rendered": null,
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "full popcorn",
                  "className": "favorite-icon",
                  "onClick": [Function],
                  "src": "../images/empty-popcorn.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "movie-title",
            },
            "ref": null,
            "rendered": null,
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "movie-release",
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "movie-description",
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
        ],
        "type": "div",
      },
    ],
    "type": "article",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="movie poster"
            className="movie-img"
          />,
          <div
            className="movie-info-text"
          >
            <div
              className="movie-icon-container"
            >
              <p
                className="movie-rating"
              />
              <img
                alt="full popcorn"
                className="favorite-icon"
                onClick={[Function]}
                src="../images/empty-popcorn.svg"
              />
            </div>
            <h3
              className="movie-title"
            />
            <p
              className="movie-release"
            />
            <p
              className="movie-description"
            />
          </div>,
        ],
        "className": "movie-card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "movie poster",
            "className": "movie-img",
            "src": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="movie-icon-container"
              >
                <p
                  className="movie-rating"
                />
                <img
                  alt="full popcorn"
                  className="favorite-icon"
                  onClick={[Function]}
                  src="../images/empty-popcorn.svg"
                />
              </div>,
              <h3
                className="movie-title"
              />,
              <p
                className="movie-release"
              />,
              <p
                className="movie-description"
              />,
            ],
            "className": "movie-info-text",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="movie-rating"
                  />,
                  <img
                    alt="full popcorn"
                    className="favorite-icon"
                    onClick={[Function]}
                    src="../images/empty-popcorn.svg"
                  />,
                ],
                "className": "movie-icon-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "movie-rating",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "full popcorn",
                    "className": "favorite-icon",
                    "onClick": [Function],
                    "src": "../images/empty-popcorn.svg",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "movie-title",
              },
              "ref": null,
              "rendered": null,
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "movie-release",
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "movie-description",
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": "article",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
